(()=>{"use strict";var t;!function(t){t[t.CANVAS_PRESS_DOWN=0]="CANVAS_PRESS_DOWN",t[t.CANVAS_MOVE=1]="CANVAS_MOVE",t[t.CANVAS_UP=2]="CANVAS_UP"}(t||(t={}));class e{constructor(t){this.listeners={},this.activeCanvas=t,this.createEventTranslations()}addEventListener(t,e){this.listeners[t]=e}createEventTranslations(){const e={mousedown:t.CANVAS_PRESS_DOWN,touchstart:t.CANVAS_PRESS_DOWN,mousemove:t.CANVAS_MOVE,touchmove:t.CANVAS_MOVE,mouseup:t.CANVAS_UP,touchend:t.CANVAS_UP};for(const[t,s]of Object.entries(e))this.activeCanvas.addEventListener(t,(t=>{var e,i;t.preventDefault();const n=this.getInputPoint(t);null===(i=(e=this.listeners)[s])||void 0===i||i.call(e,n)}))}getInputPoint(t){const e=this.activeCanvas;let s=t.changedTouches?t.changedTouches[0].pageX:t.pageX,i=t.changedTouches?t.changedTouches[0].pageY:t.pageY;return s-=e.offsetLeft,i-=e.offsetTop,{x:s,y:i}}}class s{constructor(t){this.canvas=t,this.ctx=t.getContext("2d")}drawCircle(t,e){this.ctx.beginPath(),this.ctx.arc(t.x,t.y,e,0,2*Math.PI),this.ctx.stroke()}drawLine(t,e){this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(e.x,e.y),this.ctx.stroke()}drawFilledPolygon(t){this.ctx.fillStyle="#000",this.ctx.beginPath(),this.ctx.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;e++)this.ctx.lineTo(t[e].x,t[e].y);this.ctx.closePath(),this.ctx.fill()}clear(){this.ctx.fillStyle="white",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}fillWindow(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight}getSize(){return{width:this.canvas.width,height:this.canvas.height}}}class i{static project(t,e,s){const n=i.subtract(s,e),a=i.subtract(t,e),r=i.scale(i.dotProduct(a,n)/i.dotProduct(n,n),n);return i.add(r,e)}static dotProduct(t,e){return t.x*e.x+t.y*e.y}static scale(t,e){return{x:e.x*t,y:e.y*t}}static add(t,e){return{x:t.x+e.x,y:t.y+e.y}}static subtract(t,e){return{x:t.x-e.x,y:t.y-e.y}}static distance(t,e){return Math.sqrt((e.x-t.x)*(e.x-t.x)+(e.y-t.y)*(e.y-t.y))}static getMagnitude(t){return i.distance({x:0,y:0},t)}static setMagnitude(t,e){return i.scale(t,i.scale(1/i.getMagnitude(e),e))}static getAngle(t,e){return Math.atan2(e.y-t.y,e.x-t.x)}}class n{constructor(t){this.points=[...t]}getPoints(){return this.points}getMinLength(){const t=Math.min(i.distance(this.points[0],this.points[1]),i.distance(this.points[1],this.points[2]));return Number.isNaN(t)?0:t}}class a{constructor(t){this.points=[...t]}getSquare(){if(this.square)return this.square;const[t,e,s]=this.points,a=i.project(s,t,e),r=i.distance(s,a);let h=r/(i.distance(t,e)+r);return this.square=new n([i.add(s,i.scale(h,i.subtract(t,s))),i.add(s,i.scale(h,i.subtract(e,s))),i.add(a,i.scale(h,i.subtract(e,a))),i.add(a,i.scale(h,i.subtract(t,a)))]),this.square}getEccentricity(){return function({amplitude:t=1,period:e=2*Math.PI,phaseShift:s=0,verticalShift:i=0,t:n=0}){return t*Math.sin(2*Math.PI/e*(n+s))+i}({amplitude:.3,period:500,verticalShift:1,t:Date.now()})}getTriangles(){if(this.triangles)return this.triangles;const t=this.getSquare(),[e,s,i]=this.points,[n,r,h,c]=t.getPoints();return this.triangles=[new a([e,c,n]),new a([s,h,r]),new a([n,r,i])],this.triangles}getPoints(){return this.points}}class r{constructor(t){Object.assign(this,t)}static fromPoint({origin:t,vertex:e,t:s}){}render(t){const e=[];for(let t=0;t<4;t++){const s=this.angle+2*t*Math.PI/4;e.push(i.add(this.origin,i.scale(this.radius,{x:Math.cos(s),y:Math.sin(s)})))}const s=[];for(let t=0;t<4;t++)s.push(i.add(i.scale(this.t,e[t%4]),i.scale(1-this.t,e[(t+1)%4])));t.drawShrunkenSquare(new n([s[0],s[1],s[2],s[3]]),4);for(let i=0;i<4;i++)t.drawFractal(new a([s[(3+i)%4],s[i%4],e[i%4]]))}}class h{constructor(t){this.view=t}drawTriangle(t){const[e,s,i]=t.getPoints();this.view.drawLine(e,s),this.view.drawLine(s,i),this.view.drawLine(i,e)}drawSquare(t){const e=t.getPoints();this.view.drawFilledPolygon(e)}drawShrunkenSquare(t,e){const s=t.getPoints(),a=[null,null,null,null];for(let t=0;t<4;t++)a[t]=i.add(s[t],i.setMagnitude(e/2,i.subtract(s[(t+2)%4],s[t])));this.drawSquare(new n(a))}drawFractal(t){const e=t.getSquare();if(e.getMinLength()<h.MIN_SQUARE)return;this.drawShrunkenSquare(e,h.OFFSET);const s=t.getTriangles();for(const t of s)this.drawFractal(t)}}h.MIN_SQUARE=4,h.OFFSET=4,new class extends class{constructor(){this.totalElapsed=0;const i=document.body.appendChild(document.createElement("canvas"));this.inputInterface=new e(i),this.viewport=new s(i),this.inputInterface.addEventListener(t.CANVAS_PRESS_DOWN,(t=>{this.canvasDown(t)})),this.inputInterface.addEventListener(t.CANVAS_MOVE,(t=>{this.canvasMove(t)})),this.inputInterface.addEventListener(t.CANVAS_UP,(t=>{this.canvasUp(t)})),this.setup(),window.requestAnimationFrame((t=>this.frameHelper(t))),window.onresize=()=>{this.onResize()}}view(){return this.viewport}frameHelper(t){const e=t-this.totalElapsed;this.totalElapsed=t,this.frame(t,e),window.requestAnimationFrame((t=>this.frameHelper(t)))}onResize(){}}{constructor(){super(...arguments),this.penDown=!1,this.angle=0}canvasMove(t){this.penDown&&(this.penPos=t)}canvasUp(t){this.penDown=!1}canvasDown(t){this.penDown=!0,this.penPos=t}setup(){this.fillWindow()}onResize(){this.fillWindow()}fillWindow(){this.view().fillWindow();const{width:t,height:e}=this.view().getSize();this.radius=Math.min(t,e)/2}frame(t,e){const{width:s,height:n}=this.view().getSize(),a={x:s/2,y:n/2};this.angle=this.penDown?i.getAngle(a,this.penPos):this.angle+e/3e3,this.radius=this.penDown?i.distance(a,this.penPos):this.radius;const c=new r({origin:a,angle:this.angle,radius:this.radius,t:t/2e3%1}),o=new h(this.view());this.view().clear(),c.render(o)}}})();
//# sourceMappingURL=main.js.map